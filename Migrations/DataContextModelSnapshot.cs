// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyStore.Services.Context;

namespace MyStore.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyStore.Models.InventoryItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("itemPrice")
                        .HasColumnType("float");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<bool>("sold")
                        .HasColumnType("bit");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("InventoryItems");

                    b.HasData(
                        new
                        {
                            id = 1,
                            img = "stripe/Images/hoody.png",
                            itemName = "Hoody",
                            itemPrice = 50.990000000000002,
                            quantity = 1,
                            sold = false,
                            type = "Apparel"
                        },
                        new
                        {
                            id = 2,
                            img = "stripe/Images/slippers.png",
                            itemName = "Jordan Slides",
                            itemPrice = 70.989999999999995,
                            quantity = 1,
                            sold = false,
                            type = "Shoes"
                        },
                        new
                        {
                            id = 3,
                            img = "stripe/Images/watch.png",
                            itemName = "Mr. Nice Watch",
                            itemPrice = 99.989999999999995,
                            quantity = 1,
                            sold = false,
                            type = "Misc"
                        },
                        new
                        {
                            id = 4,
                            img = "stripe/Images/watch.png",
                            itemName = "Broken Watch",
                            itemPrice = 9.9900000000000002,
                            quantity = 1,
                            sold = false,
                            type = "Misc"
                        });
                });

            modelBuilder.Entity("MyStore.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "None"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cash"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Credit"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Debit"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Check"
                        },
                        new
                        {
                            Id = 6,
                            Name = "GiftCard"
                        });
                });

            modelBuilder.Entity("MyStore.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfBuyer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<double>("SalesTax")
                        .HasColumnType("float");

                    b.Property<string>("StripeCheckoutSessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PaymentTypeId");

                    b.ToTable("PurchaseOrders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Datetime = new DateTime(2020, 6, 22, 13, 17, 28, 149, DateTimeKind.Local).AddTicks(2540),
                            NameOfBuyer = "John Doe",
                            PaymentTypeId = 2,
                            SalesTax = 0.45000000000000001,
                            Subtotal = 59.990000000000002
                        },
                        new
                        {
                            Id = 2,
                            Datetime = new DateTime(2020, 6, 21, 13, 17, 28, 171, DateTimeKind.Local).AddTicks(9110),
                            NameOfBuyer = "Mil cab",
                            PaymentTypeId = 4,
                            SalesTax = 106.34999999999999,
                            Subtotal = 70.989999999999995
                        },
                        new
                        {
                            Id = 3,
                            Datetime = new DateTime(2020, 6, 21, 13, 17, 28, 171, DateTimeKind.Local).AddTicks(9170),
                            NameOfBuyer = "Mildred Smith",
                            PaymentTypeId = 4,
                            SalesTax = 106.34999999999999,
                            Subtotal = 99.989999999999995
                        },
                        new
                        {
                            Id = 4,
                            Datetime = new DateTime(2020, 6, 21, 13, 17, 28, 171, DateTimeKind.Local).AddTicks(9180),
                            NameOfBuyer = "Bob Pryt",
                            PaymentTypeId = 4,
                            SalesTax = 106.34999999999999,
                            Subtotal = 9.9900000000000002
                        });
                });

            modelBuilder.Entity("MyStore.Models.PurchaseOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InventoryItemId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventoryItemId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InventoryItemId = 1,
                            PurchaseOrderId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            InventoryItemId = 3,
                            PurchaseOrderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            InventoryItemId = 1,
                            PurchaseOrderId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            InventoryItemId = 4,
                            PurchaseOrderId = 2,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("MyStore.Models.PurchaseOrder", b =>
                {
                    b.HasOne("MyStore.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyStore.Models.PurchaseOrderItem", b =>
                {
                    b.HasOne("MyStore.Models.InventoryItem", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyStore.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
